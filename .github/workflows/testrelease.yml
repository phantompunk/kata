name: release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  # packages: write
  # issues: write
  # id-token: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        include:
          - arch: amd64
            cc: gcc
          - arch: arm64
            cc: aarch64-linux-gnu-gcc
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          go-version-file: go.mod

      - name: Install cross-compilation tools
        if: matrix.arch == 'arm64'
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build Linux binary
        run: make dist
        env:
          GOARCH: ${{ matrix.arch }}
          CC: ${{ matrix.cc }}
          VERSION: ${{ github.ref_name }}
          COMMIT: ${{ github.sha }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kata-linux-${{ matrix.arch }}
          path: dist/kata_*.tar.gz
          retention-days: 1
        
  build-darwin:
    runs-on: macos-latest
    strategy: 
      matrix:
        - arch: amd64
        - arch: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          go-version-file: go.mod

      - name: Build Linux binary
        run: make dist
        env:
          GOARCH: ${{ matrix.arch }}
          VERSION: ${{ github.ref_name }}
          COMMIT: ${{ github.sha }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kata-darwin-${{ matrix.arch }}
          path: dist/kata_*.tar.gz
          retention-days: 1

  release:
    name: Create Release
    needs: [build-linux, build-darwin]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true
      
      - name: Display structure
        run: ls -R artifacts/
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*.tar.gz
          generate_release_notes: true
